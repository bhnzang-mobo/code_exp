apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'checkstyle'

check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    configFile file("checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url project.nightliesUrl
        }
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

uploadArchives {
    def bintrayUsername = ""
    def bintrayApikey = ""
    if (project.rootProject.file('local.properties').exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        bintrayUsername = properties.getProperty('bintray.user')
        bintrayApikey = properties.getProperty('bintray.apikey')
    }

    configuration = configurations.archives
    repositories.mavenDeployer {
        pom {
           setGroupId project.mavenGroupId
           setArtifactId project.mavenArtifactId
           setVersion project.mavenVersion
        }
        repository (url: project.mavenRepoUrl) {
            authentication(
                 // put these values in local file ~/.gradle/gradle.properties
                 userName: project.hasProperty("bintrayUsername") ? project.bintrayUsername : bintrayUsername,
                 password: project.hasProperty("bintrayApikey") ? project.bintrayApikey : bintrayApikey
            )
        }
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath())
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
